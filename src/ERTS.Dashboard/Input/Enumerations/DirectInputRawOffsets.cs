using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ERTS.Dashboard.Input.Enumerations
{
    public static class DirectInputRawOffsets
    {
        public const int KB_ESCAPE = 0x01;
        public const int KB_1 = 0x02;
        public const int KB_2 = 0x03;
        public const int KB_3 = 0x04;
        public const int KB_4 = 0x05;
        public const int KB_5 = 0x06;
        public const int KB_6 = 0x07;
        public const int KB_7 = 0x08;
        public const int KB_8 = 0x09;
        public const int KB_9 = 0x0A;
        public const int KB_0 = 0x0B;
        public const int KB_MINUS = 0x0C;    /* - on main keyboard */
        public const int KB_EQUALS = 0x0D;
        public const int KB_BACK = 0x0E;    /* backspace */
        public const int KB_TAB = 0x0F;
        public const int KB_Q = 0x10;
        public const int KB_W = 0x11;
        public const int KB_E = 0x12;
        public const int KB_R = 0x13;
        public const int KB_T = 0x14;
        public const int KB_Y = 0x15;
        public const int KB_U = 0x16;
        public const int KB_I = 0x17;
        public const int KB_O = 0x18;
        public const int KB_P = 0x19;
        public const int KB_LBRACKET = 0x1A;
        public const int KB_RBRACKET = 0x1B;
        public const int KB_RETURN = 0x1C;    /* Enter on main keyboard */
        public const int KB_LCONTROL = 0x1D;
        public const int KB_A = 0x1E;
        public const int KB_S = 0x1F;
        public const int KB_D = 0x20;
        public const int KB_F = 0x21;
        public const int KB_G = 0x22;
        public const int KB_H = 0x23;
        public const int KB_J = 0x24;
        public const int KB_K = 0x25;
        public const int KB_L = 0x26;
        public const int KB_SEMICOLON = 0x27;
        public const int KB_APOSTROPHE = 0x28;
        public const int KB_GRAVE = 0x29;    /* accent grave */
        public const int KB_LSHIFT = 0x2A;
        public const int KB_BACKSLASH = 0x2B;
        public const int KB_Z = 0x2C;
        public const int KB_X = 0x2D;
        public const int KB_C = 0x2E;
        public const int KB_V = 0x2F;
        public const int KB_B = 0x30;
        public const int KB_N = 0x31;
        public const int KB_M = 0x32;
        public const int KB_COMMA = 0x33;
        public const int KB_PERIOD = 0x34;    /* . on main keyboard */
        public const int KB_SLASH = 0x35;    /* / on main keyboard */
        public const int KB_RSHIFT = 0x36;
        public const int KB_MULTIPLY = 0x37;    /* * on numeric keypad */
        public const int KB_LMENU = 0x38;    /* left Alt */
        public const int KB_SPACE = 0x39;
        public const int KB_CAPITAL = 0x3A;
        public const int KB_F1 = 0x3B;
        public const int KB_F2 = 0x3C;
        public const int KB_F3 = 0x3D;
        public const int KB_F4 = 0x3E;
        public const int KB_F5 = 0x3F;
        public const int KB_F6 = 0x40;
        public const int KB_F7 = 0x41;
        public const int KB_F8 = 0x42;
        public const int KB_F9 = 0x43;
        public const int KB_F10 = 0x44;
        public const int KB_NUMLOCK = 0x45;
        public const int KB_SCROLL = 0x46;    /* Scroll Lock */
        public const int KB_NUMPAD7 = 0x47;
        public const int KB_NUMPAD8 = 0x48;
        public const int KB_NUMPAD9 = 0x49;
        public const int KB_SUBTRACT = 0x4A;    /* - on numeric keypad */
        public const int KB_NUMPAD4 = 0x4B;
        public const int KB_NUMPAD5 = 0x4C;
        public const int KB_NUMPAD6 = 0x4D;
        public const int KB_ADD = 0x4E;    /* + on numeric keypad */
        public const int KB_NUMPAD1 = 0x4F;
        public const int KB_NUMPAD2 = 0x50;
        public const int KB_NUMPAD3 = 0x51;
        public const int KB_NUMPAD0 = 0x52;
        public const int KB_DECIMAL = 0x53;    /* . on numeric keypad */
        public const int KB_OEM_102 = 0x56;    /* <> or \| on RT 102-key keyboard (Non-U.S.) */
        public const int KB_F11 = 0x57;
        public const int KB_F12 = 0x58;
        public const int KB_F13 = 0x64;    /*                     (NEC PC98) */
        public const int KB_F14 = 0x65;    /*                     (NEC PC98) */
        public const int KB_F15 = 0x66;    /*                     (NEC PC98) */
        public const int KB_KANA = 0x70;    /* (Japanese keyboard)            */
        public const int KB_ABNT_C1 = 0x73;    /* /? on Brazilian keyboard */
        public const int KB_CONVERT = 0x79;    /* (Japanese keyboard)            */
        public const int KB_NOCONVERT = 0x7B;    /* (Japanese keyboard)            */
        public const int KB_YEN = 0x7D;    /* (Japanese keyboard)            */
        public const int KB_ABNT_C2 = 0x7E;    /* Numpad . on Brazilian keyboard */
        public const int KB_NUMPADEQUALS = 0x8D;    /* = on numeric keypad (NEC PC98) */
        public const int KB_PREVTRACK = 0x90;    /* Previous Track (KB_CIRCUMFLEX on Japanese keyboard) */
        public const int KB_AT = 0x91;    /*                     (NEC PC98) */
        public const int KB_COLON = 0x92;    /*                     (NEC PC98) */
        public const int KB_UNDERLINE = 0x93;    /*                     (NEC PC98) */
        public const int KB_KANJI = 0x94;    /* (Japanese keyboard)            */
        public const int KB_STOP = 0x95;    /*                     (NEC PC98) */
        public const int KB_AX = 0x96;    /*                     (Japan AX) */
        public const int KB_UNLABELED = 0x97;    /*                        (J3100) */
        public const int KB_NEXTTRACK = 0x99;    /* Next Track */
        public const int KB_NUMPADENTER = 0x9C;    /* Enter on numeric keypad */
        public const int KB_RCONTROL = 0x9D;
        public const int KB_MUTE = 0xA0;    /* Mute */
        public const int KB_CALCULATOR = 0xA1;    /* Calculator */
        public const int KB_PLAYPAUSE = 0xA2;    /* Play / Pause */
        public const int KB_MEDIASTOP = 0xA4;    /* Media Stop */
        public const int KB_VOLUMEDOWN = 0xAE;    /* Volume - */
        public const int KB_VOLUMEUP = 0xB0;    /* Volume + */
        public const int KB_WEBHOME = 0xB2;    /* Web home */
        public const int KB_NUMPADCOMMA = 0xB3;    /* ; on numeric keypad (NEC PC98) */
        public const int KB_DIVIDE = 0xB5;    /* / on numeric keypad */
        public const int KB_SYSRQ = 0xB7;
        public const int KB_RMENU = 0xB8;    /* right Alt */
        public const int KB_PAUSE = 0xC5;    /* Pause */
        public const int KB_HOME = 0xC7;    /* Home on arrow keypad */
        public const int KB_UP = 0xC8;    /* UpArrow on arrow keypad */
        public const int KB_PRIOR = 0xC9;    /* PgUp on arrow keypad */
        public const int KB_LEFT = 0xCB;    /* LeftArrow on arrow keypad */
        public const int KB_RIGHT = 0xCD;    /* RightArrow on arrow keypad */
        public const int KB_END = 0xCF;    /* End on arrow keypad */
        public const int KB_DOWN = 0xD0;    /* DownArrow on arrow keypad */
        public const int KB_NEXT = 0xD1;    /* PgDn on arrow keypad */
        public const int KB_INSERT = 0xD2;    /* Insert on arrow keypad */
        public const int KB_DELETE = 0xD3;    /* Delete on arrow keypad */
        public const int KB_LWIN = 0xDB;    /* Left Windows key */
        public const int KB_RWIN = 0xDC;    /* Right Windows key */
        public const int KB_APPS = 0xDD;    /* AppMenu key */
        public const int KB_POWER = 0xDE;    /* System Power */
        public const int KB_SLEEP = 0xDF;    /* System Sleep */
        public const int KB_WAKE = 0xE3;    /* System Wake */
        public const int KB_WEBSEARCH = 0xE5;    /* Web Search */
        public const int KB_WEBFAVORITES = 0xE6;    /* Web Favorites */
        public const int KB_WEBREFRESH = 0xE7;    /* Web Refresh */
        public const int KB_WEBSTOP = 0xE8;    /* Web Stop */
        public const int KB_WEBFORWARD = 0xE9;    /* Web Forward */
        public const int KB_WEBBACK = 0xEA;    /* Web Back */
        public const int KB_MYCOMPUTER = 0xEB;    /* My Computer */
        public const int KB_MAIL = 0xEC;    /* Mail */
        public const int KB_MEDIASELECT = 0xED; /* Media Select */

        public const int XBOX_LEFTSTICK_X = 0;
        public const int XBOX_LEFTSTICK_Y = 4;
        public const int XBOX_RIGHTSTICK_X = 12;
        public const int XBOX_RIGHTSTICK_Y = 16;

        public const int LE3D_X = 0;
        public const int LE3D_Y = 4;
        public const int LE3D_Z = 20;
        public const int LE3D_THROTTLE = 24;
        public const int LE3D_TRIGGER = 48;
    }
}
