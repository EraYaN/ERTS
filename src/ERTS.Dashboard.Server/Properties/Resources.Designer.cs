//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ERTS.Dashboard.Server.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ERTS.Dashboard.Server.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;!-- Learn about this code on MDN: https://developer.mozilla.org/en-US/docs/Web/API/Detecting_device_orientation --&gt;
        ///&lt;!DOCTYPE html&gt;
        ///&lt;html&gt;
        ///&lt;head&gt;
        ///&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;style.css&quot; media=&quot;screen&quot; /&gt;
        ///&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdnjs.cloudflare.com/ajax/libs/rangeslider.js/2.3.1/rangeslider.css&quot; /&gt;
        ///&lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js&quot;&gt;&lt;/script&gt;
        ///&lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/rangeslider.js/2.3.1/ran [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string index {
            get {
                return ResourceManager.GetString("index", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to var canvas = document.querySelector(&apos;#canvas&apos;);
        ///var output = document.querySelector(&apos;#output pre&apos;);
        ///var status_el = document.querySelector(&apos;#status pre&apos;);
        ///
        ///var pitch = 0;  // In degree in the range [-90,90]
        ///var yaw = 0; // In degree in the range [-180,180]
        ///var roll = 0; // In degree in the range [-180,180]
        ///var lift = 0; // [0,1]
        ///
        ///var width = 40;
        ///var height = 40;
        ///
        ///var maxX = canvas.clientWidth;
        ///var maxY = canvas.clientHeight;
        ///
        ///var post_enabled = true;
        ///var status_string = &apos;Initializing&apos;;
        ///
        ///$(&apos;#lift&apos;).rangeslid [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string script {
            get {
                return ResourceManager.GetString("script", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #canvas {
        ///  border: 1em solid #CCC;
        ///  border-radius: 10px;
        ///  display: block;
        ///  margin-bottom: 4em;
        ///}
        ///
        ///#container {
        ///  width: 840px;
        ///  margin: auto;
        ///}
        ///
        ///#slider {
        ///  width: 760px;
        ///  margin: 0 auto;
        ///}
        ///
        ///#output {
        ///  text-align: center;
        ///}
        ///
        ///#output pre {
        ///  text-align: left;
        ///  display: inline-block;
        ///}
        ///
        ///pre {
        ///  font-size: 24pt;
        ///}
        ///
        ///#status {
        ///  text-align: center;
        ///  color: yellow;
        ///}
        ///.
        /// </summary>
        internal static string style {
            get {
                return ResourceManager.GetString("style", resourceCulture);
            }
        }
    }
}
